{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","tittle","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","toUpperCase","GiftExpertApp","defaultCategories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,uBAAMC,SAXW,SAACC,GAElBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAC5CN,EAAc,MAKlB,UACI,4BAAID,IACA,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SApBS,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,OAAOF,EAAIG,MACXX,IAAG,UAAEQ,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAVvB,kBAcZM,GAdY,4CAAH,sDCGPQ,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,OAAOV,EAAS,EAATA,IAEhC,OACI,qBAAKe,UAAY,yCAAjB,SACG,qBAAKA,UAAU,OAAOC,IAAOhB,EAAKiB,IAAKP,OCFpCQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAf,GACEa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAI3B,CAACrB,IAEIsB,EDfwBI,CAAa1B,GAAhCc,EAFwB,EAE7BP,KAAac,EAFgB,EAEhBA,QAEpB,OACI,qCACI,oBAAIJ,UAAY,yCAAhB,SAA0DjB,EAAS2B,gBAElEN,GAAW,mBAAGJ,UAAW,wCAAd,qBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOL,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEYA,GADCA,EAAIC,aEdlC,SAASiB,EAAT,GACN,IAAD,IAD+BC,yBAC/B,MADmD,GACnD,IACwC3C,mBAAS2C,GADjD,mBACWnC,EADX,KACuBT,EADvB,KAEI,OACI,qCACI,oBAAIgC,UAAW,SAAf,2BACA,oBAAIA,UAAW,WAAf,4BACA,cAAC,EAAD,CAAahC,cAAiBA,IAE9B,uBACA,6BAGQS,EAAWe,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAUA,GADHA,W,MCdnC8B,IAASC,OACL,cAACH,EAAD,IACAI,SAASC,eAAe,W","file":"static/js/main.9d3f7f23.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n\r\n    const handeInputChange = (e) =>{\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n  \r\n        if( inputValue.trim().length > 2){\r\n            setCategories(categories => [ inputValue,...categories,]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <p>{inputValue}</p>\r\n                <input\r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={ handeInputChange}\r\n                />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n  };\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=LiD5xHVX5zlS4l7jil9Gfw4Nsv2MzUnW`\r\n    const respuesta = await fetch(url)\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            tittle:img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return(gifs);\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifGridItem = ({tittle,url}) => {\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n           <img className='Gifs' src = {url} alt={tittle} />\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n    tittle: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const  GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className = \"card animate__animated animate__fadeIn\">{category.toUpperCase()}</h3>\r\n       \r\n            {loading && <p className= \"card animate__animated animate__flash\">Loading</p> }\r\n       \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n     });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(img => {\r\n                    setstate({\r\n                        data: img,\r\n                        loading: false,\r\n                    });\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state; // \r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport function GiftExpertApp({defaultCategories = []}) \r\n{\r\n    const [categories, setCategories] = useState(defaultCategories);\r\n    return (\r\n        <>\r\n            <h2 className =\"tittle\">GIF GENERATOR</h2>\r\n            <h3 className= \"subtitle\"> Search a Gif!</h3>\r\n            <AddCategory setCategories = {setCategories}/>\r\n\r\n            <hr />\r\n            <ol>\r\n                \r\n                {  \r\n                    categories.map( (category) => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GiftExpertApp } from './GiftExpertApp';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render( \r\n    <GiftExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}